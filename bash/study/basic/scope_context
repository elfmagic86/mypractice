
context와 관련된..
---
# 스코프?
## TODO 로컬/글로벌, lexical/dynamic scoping이 햇갈림
: https://mug896.gitbooks.io/shell-script/content/functions.html

## 스크립트가 실행된 환경으로, 어떤 변수를 사용할수잇는지 알기.
  - 선언된 변수는 subshell, source {스크립트} 에서는 그대로 사용가능
  - child process에서 사용되려면 export 되어야함.
  export {varname}
  export -f {funcname}


# context구분
: subshell, 현재쉘, child프로세스 이런것들?

  - TODO 어디에서, subshell이고.. 어디에서 현재쉘인가?
  : https://mug896.gitbooks.io/shell-script/content/functions.html
  ``` 
  # echo hello world | read var; 는 파이프로 인해 subshell 에서 실행되어 
  # echo "$var" 는 값이 표시되지 않는다.
  $ echo hello world | read var; echo "$var"

  # { } 을 이용해 명령 group 을 만들면 read, echo 명령이 같은 context 
  # 에서 실행되어 정상적으로 값이 표시됩니다.
  $ echo hello world | { read var; echo "$var" ;}

  # hello 는 터미널에 표시되고 world 만 outfile 에 저장된다.
  $ echo hello; echo world > outfile

  # 명령 group 을 이용하면 hello world 둘 다 outfile 에 저장된다.
  { echo hello; echo world ;} > outfile

  # 명령 group 을 하나의 짧은 이름으로 사용 ( 함수정의 ) 
  { 
      read var1
      read var2
      echo "$var1 $var2"
  } < infile

  f1() { 
      read var1
      read var2
      echo "$var1 $var2"
  }           

  $ f1 < infile
  ```

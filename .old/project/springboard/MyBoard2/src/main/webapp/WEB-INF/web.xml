<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">

	<!-- WAS가 사용하는 기본 설정. -->


	<!-- webApplicationContext -->
	<!-- 루트컨테이너를 만든다.(모델을 위한 빈설정(DAO,Service등)) -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:/META-INF/spring/root-context.xml</param-value>
	</context-param>



	<!-- webApplicationContext -->
	<!-- springMVC서블릿을 만든다. 설정은 springMVC에 의존하는 빈 설정 -->
	<servlet>
		<servlet-name>appServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:/META-INF/spring/servlet-context.xml</param-value>
		</init-param>
		<load-on-startup>2</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>appServlet</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>


	<!-- log4j 파일 위치변경시 사용한다. -->
	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>classpath:/META-INF/log4j/log4j.xml</param-value>
	</context-param>


	<!--필터설정 -->
	<filter>
		<filter-name>CharacterEncodingFilter</filter-name>
		<filter-class>com.kang.myboard.filter.EncodingFilter</filter-class>
		<!-- <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class> 
			<init-param> <param-name>encoding</param-name> <param-value>UTF-8</param-value> 
			</init-param> <init-param> <param-name>forceEncoding</param-name> <param-value>true</param-value> 
			</init-param> -->
	</filter>
	<filter-mapping>
		<filter-name>CharacterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- put, delete가 multipart로 타입으로 전송된다면 아래의 필터를 사용하기위해 멀티파트필터를사용해야함. -->
	<!--뭔이유인지 모르겠지만 hiddenfilter는 /*는 아에안되고 *는된다. -->
	<filter>
		<filter-name>MultipartFilter</filter-name>
		<filter-class>org.springframework.web.multipart.support.MultipartFilter</filter-class>
<!-- 		<init-param> Makes no difference, if excluded.
			<param-name>multipartResolverBeanName</param-name>
			<param-value>filterMultipartResolver</param-value>
		</init-param> -->
	</filter>
	<filter-mapping>
		<filter-name>MultipartFilter</filter-name>
		<servlet-name>appServlet</servlet-name>  <!--Changed from /* to dispatcher -->
	</filter-mapping>
	
	<filter>
		<filter-name>httpMethodFilter</filter-name>
		<filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>httpMethodFilter</filter-name>
		<servlet-name>appServlet</servlet-name>
	</filter-mapping>
</web-app>

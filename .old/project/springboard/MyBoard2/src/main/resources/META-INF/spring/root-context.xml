<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">
 
<!--  [모델을 위한 컨테이너] -->
	

	<!--1. 스프링 컨테이너 설정 [ -->
	<!--  여긴딱히 없음.-->
	
	
	<!--2. 빈 등록  -->
	<!--[[[[[[[[[모델+ 서비스]]]]]]]]]]  -->
	<!--/////////// dao  -->
	 <!-- <bean id="userDAO" class="com.kang.myboard.dao.UserDAO">
	 	<property name="jdbcTemplate" ref="dataSource"></property>
	 </bean> -->
	 <bean id="boardDAO" class="com.kang.myboard.dao.BoardDAO">
	 	<property name="template" ref="sqlSessionTemplate"></property><!--받는놈 변수 타입, 주는 객체타입 다름주의  -->
	 </bean>
	 <bean id="answerDAO" class="com.kang.myboard.dao.AnswerDAO">
	 	<property name="template" ref="sqlSessionTemplate"></property>
	 </bean>
	 <!--////////////////// service -->
	 <bean id="answerService" class="com.kang.myboard.service.AnswerService">
	 	<property name="answerDAO" ref="answerDAO"></property>
	 </bean>	 
	 <bean id="boardService" class="com.kang.myboard.service.BoardService">
	 	<property name="boardDAO" ref="boardDAO"></property>
	 	<property name="answerDAO" ref="answerDAO"></property>
	 </bean>	
	 <!-- <bean id="userService" class="com.kang.myboard.service.UserService">
	 	<property name="userDAO" ref="userDAO"></property>
	 </bean> -->
	 
	 
	 
	 
	<!--3. mybatis  -->
	
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory" />
	</bean>
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	    <property name="dataSource" ref="dataSource" />
	    <property name="configLocation" value="classpath:/META-INF/DB/mybatis/mybatis-config.xml"/>
	</bean> 
	<!--3. DB설정 JDBC방식  -->
	<context:property-placeholder location="classpath:/META-INF/DB/jdbc.properties"/> 
	<bean id="dataSource" class="oracle.jdbc.pool.OracleDataSource" destroy-method="close"> 
        <property name="URL" value="${jdbc.url}" /> 
        <property name="user" value="${jdbc.username}"/> 
        <property name="password" value="${jdbc.password}"/> 
        <property name="connectionCachingEnabled" value="true"/> 
    </bean>
    
    
 	<!-- mutipart request 처리위해 필요. --><!--name으로 찾는데 id로 설정했으니 당연히 못찾지....ㅄ.  -->
	<bean id="filterMultipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="UTF-8"/>
	</bean>
	 
	<!--3. DB- ibatis  --> 
	<!-- <bean id="ibatisTemplate" class="org.springframework.orm.ibatis.SqlMapClientTemplate">
		<property name="sqlMapClient" ref="sqlMapClient" />
	</bean>
	<bean id="sqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
		<property name="configLocation" value="classpath:/META-INF/DB/SqlMapConfig.xml" />
	</bean>
	 -->
	 
	<!--JNDI에서 META-INF/Context.xml 설정을 사용한다.  --> 	
<!--	<bean id="springDataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="jdbc/oracle" />
		<property name="resourceRef" value="true" />
	</bean> 
		<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean" scope="singleton">
	    <property name="jndiName" value="java:comp/env/jdbc/pcmDB" />
	    <property name="resourceRef" value="true" />        
	</bean>
	-->	

    
	 
</beans>

# 풀이.   // 풀이1을 바탕으로..실패해서 다시한번.도전.

  1) 근본적으로. 순서를 제방향으로 찾는 문제이다.

  1) 출력은 '스택인,아웃인 문자열'
    ; 출력. 나왔을때. 순서는 뒤집어진다. 
     즉.. 역순인 것이 들어가야 정순이 나온다.   321,  => 123.       
   > 만약 찾는 것이 123이면.  입력이 3,2,1순서로 되어있는지 '역순으로' 확인해야한다.  
   
   - 입력문자의 "순서가 역순"으로 되어있는지 (왼->오. 로 확인하는것.
      : 이때 스택에 넣는 순서는 3,2,1순서이다. 왼->오.
   
   - 출력은 정순.   3.2.1 이 순서로 나온순으로 '차례'대로 삽입한다.

  > 즉..입력,출력, 출력된 문자합치기. 모두 왼->오 인 정순이지만.
  > 스택pop의 조건확인은 이전것이 정렬되었는지(역순) 확인해야함.

  0) 같은문자가 여럿등장할경우. 어느것을 우선으로할지. 이전 순서정한것을 기준으로. 가까운것을함. (오-:>왼이면 왼쪾것)
   

# 풀이(정리)
  - 결과 문자열의 순서에 맞게 입력문자열에 순서를 배정한다.
  - push시, 이전값이 현재 인덱스에 대해 (역순)정렬인가? 그러면 푸쉬하고, 아니면 팝한다.                //단순 입력인데.
    팝을할때는. 또다시 이전값을 확인하여. (역순)정렬된 상태라면 이전값을 도 팝. 아니면 다음 푸쉬.  //

# 결과
  - 첫줄은 올바르다. 그러나 실제 한번에 정렬되어버림.
    기준을 잘못정한것일까.
    하여튼. 다른 이상한문자를 넣어도 올바르게 동작하는 것을 확인했다.
    여기서 '문제'와 똑같이 할것인가. 그리고 현재 내 상황을 비교했을때.
    더 이상 시간을 투자하는 것은 단순고집이라고 판단함.
    "똑같은"풀이..를하고는 싶지만. 최소한 얻을것은 다 얻었고. 실수도 많이해봤으니. 다음에 더 잘푸는것으로.
    이건.. 실전은 아니니까. 고집은 부리지말고. 중요한것에 집중하자.
    
     
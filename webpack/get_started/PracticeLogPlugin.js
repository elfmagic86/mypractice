// --------------------------------------------------------------
// 연습용 plugin 
// https://github.com/webpack/docs/wiki/how-to-write-a-plugin
// https://github.com/marak/colors.js/
var colors = require('colors');

function log() {
	var color_strs = () => {
		return [].slice.call(arguments).map((str) => {
			if(typeof str === 'string') {
				return str.underline;	
			} else if(typeof str === 'array') {
				console.error(str)
				return color_strs(str);	
			} else {
				return (str || '').toString()
			}
		});
	}
	console.log.apply(console, color_strs(arguments));
}

/////////////////////
function My_Log_Plugin() {};
My_Log_Plugin.prototype.apply = function(compiler) {
	compiler.plugin('run', function(compiler, callback) {
		log("run....".underline);
		callback();
	});
	compiler.plugin('done', function() {
		log('done......'); 
	});
	compiler.plugin('emit', function(compilation, callback) {
		log('emit......')
		// Explore each chunk (build output):
		compilation.chunks.forEach(function(chunk) {
			var dep_file_paths = [];
			// Explore each module within the chunk (built inputs):
			chunk.modules.forEach(function(module) {
				// Explore each source file path that was included into the module:
				( module.fileDependencies || []).forEach(function(filepath) {
					// we've learned a lot about the source structure now...
					dep_file_paths.push(filepath.slice(filepath.lastIndexOf('/'), filepath.length).gray);
				});
			});


			// Explore each asset filename generated by the chunk:
			var file_paths = [];
			chunk.files.forEach(function(filename) {
				// Get the asset source for each file generated by the chunk:
				file_paths.push(filename.green);
				var source = compilation.assets[filename].source();
			});
			log(`\nchunk ${chunk.name}`.red);
			log(`		files: `, file_paths)
			log(`		deps: `, dep_file_paths)

			callback();
		});
	})
};

// --------------------------------------------------------------
module.exports = My_Log_Plugin;
